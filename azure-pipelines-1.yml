# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - back-end/*
    exclude:
      - front-end/*

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  azureSubscription: 'phase3-backend'
  appName: 'msa-phase3-backapi'
  dockerRegistryServiceConnection: 'a3ac9f42-2578-400e-86cc-084e4f684894'
  imageRepository: 'xgunzmsaphasemax'
  azureSubscriptionEndpoint: 'phase3-backend'
  azureContainerRegistry: 'msaphase3backend.azurecr.io'
  dockerComposefilePath: '$(Build.SourcesDirectory)/back-end/GameApi/GameApi/GameApi/docker-compose.yml'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DockerCompose@0
      displayName: Build services
      inputs: 
        action: Build services
        azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
        azureContainerRegistry: $(azureContainerRegistry)
        dockerComposeFile: $(dockerComposefilePath)

    - task: DockerCompose@0
      displayName: Push services
      inputs:
        action: Push services
        azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
        azureContainerRegistry: $(azureContainerRegistry)
        dockerComposeFile: $(dockerComposefilePath)

    - task: AzureWebAppContainer@1
      displayName: 'Azure Web App on Container Deploy'
      inputs:
        azureSubscription: $(azureSubscription)
        appName: $(appName)
        imageName: $(azureContainerRegistry)/$(imageRepository):$(tag)